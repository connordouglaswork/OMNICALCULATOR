<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBoxLogo.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>