<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAMUAAADICAYAAABYpiUuAAAABGdBTUEAALGPC/xhBQAAFUVJREFUeF7t
        nQm0JUV5xzmKRsLiBGSfCWjYkU22oFFhZBNGQAUzuCSiYNhFQEIAIyAjARUlgCCLKCAIGDKgKIIKJixG
        IioajGiCKIpRUUFcQD3k9+/63px571ZVd993b9/ue7/fOf8D896/uqq7vn69VX21jOM4juM4juM4juM4
        juM4juM4juM4juM4juM4juM4juM4zvjz1FNPbY2OQpeiL6PH0bfRh8ziOOMNwf4i9PfoBvQzlMWKOc74
        QFz/KXoNugw9hOpysm3KcboNwfxy9EH0fUX2LPCTwuk2BPFC9NkinAfD0bZpx+kWBO+B6I4ijAfLi6wK
        x+kGBO12SA/Nw+BR9AyrynHaDwF7AvqNoncW/MD+G+NGq8qZJOj4jdCOkv2o9dDWzdEXUD/oJLgGvQ3t
        gP6IUhxoVTqTAB2+Gpp52/FD9F60k9laB21TIH8P1UUP32+wzRTwbz2HpPg/tLJZnUmADr+q6Po0+qp7
        NtrOiowc2rKzGlYTfZ/Y1TYxDX7+tcIR53yzOZOCdXxVLkcjvXpQ/0FFS6qjYRvbWvEe+J1uGXNETyRn
        jLGOr8t1aIFtojGo8+Si9mroeaH0+QiPTvQUd5vNmSToeP0l7ZdL0Ia2qaFCPe8saixH3yj2sGJZ8K2N
        fqtCCU4wqzNJ0PF7oG8WIdAfP0XH2eaGAts/vqipnPPRClasFLzHFaXSbGxWZxIhAF6HrkC/UDT0we1o
        L9vcwGCbby62Xs6RVqQS+JdD9xQl41xpVmfSIRhWR3pF2e/XYd1SrWmbmxVsZ9dii+XUfr6hzDtC0SQD
        P8GdMYDA2Ar9M/qVoqQG30B72mb6gvI6Ob+ujZUw7ZtDFSizKfplUTrOXWZ1nDgEyXpoEXpYEVODk2wT
        taGsviuU8R6z14JyZS8X3mpWx8lDsMxD+pBXh+useGUoc2womuUqs9eCcnuH4kkeRKuZ3XGqQdDshG5U
        BFVEwzHmWvEs+F5clMjzabPXgnLPQv9RbCHN4WZ3nPoQQPq6rGEgVdnPiibB8+lgTXKHWWtD2VPDJpLc
        bFbH6R8C6TmozgfAw6xoD/zuiGBJogf49cxeC8opUcEftJEMu5jdcWYPAfWuEFeV6Bl+wc/0MF/2IP9q
        s9eGsmW3e+eY1XEGB4H1dyG+SnkMbWnFCvj3ucVv0lxo1tpQ9u1hE0keQPPM7jiDheDaEOVmsU3xRVRM
        8eS/c9Dv9MMEelBfp6igJpRbUGwhT+1vHY5TGwLt30K8ZVlk3kPDP5McVGy0JpTTLVkZngHQaQ4CrsrI
        1legn4T/jXKtba42lP1x2ESS+9AaZnecZiDoyuZAfMX+myI5QSgH5ZQPtox9ze44zULw5Sby5Fhsm6gF
        5aqMmTrb7I7TPATgxujnRSjWY6FtojKUqTI3RB8IPY/TJEGHr4I2Q0XKmog2QCuavRGo70RUhwetaCXw
        r4mqnBB3orWsmDNu0LlroP2Qhners/W+/QlUFX0v0DCNW9EH0AHoBehpVsXAYJsad5Sb1DOTygP+8G6C
        qpwQ+iK+hRVzxgU6VVm0z0JVHiRnw71IzwJayGRrq35WsJ2yj2hLU2lgHr6XoSonhP5gzLdiS+Bn+iOg
        FP3HII0AVlKGu5HyPf0e6c3Y/UgDCZUz6mp0Afon9Ca0kW3KaRIOvE4EXQ2+g0aFVvbRvfhJaHf0HGte
        ZSizLtJ2qvCXViwJHo2VUuCWoUVZNGR8LtKVVX9UdGUdFDpxdDJpzrdyUnnytGHAgV0eHY7q3HI0idJM
        KrD+EVW+kuCtOngwOaWV3+lWTGtOVEG3k4M8AaqgE1VZRY5Ec6zZTr9wEJXGUstO1RmS3QY0bEN/KTe1
        XYnC75U9pBSz98CvdLtzW2HqBhqiosGSG9guOHXgwCnZbz9LT7WNm9FbUXSQHT9XWpwcj5p1GvxcLwJy
        X7/bjLKifwj5OhdV4EApWXCdmWxV0HcBPRzqMv6fSG9e9EyiZa70EKmJ+7lBeINA6XLOQS+0XS3g3/+i
        X2b4plkL+PfzUVnO2y6h54/OZHdvHA6OUq3UeY26NAp8BbxSROptiFLTvAStbpuvBH4teHIY+ij6FhoG
        OhH2Ryugt+gHGW6ypqltR6OyK0tX8XX0loYD8jzU79XhelT7a29V2PaKSK86/wHpr9ogb+nuQmUZ/y5G
        f4UGffWciVJm6tntFqR8VRqnpVs07fv66E+QHupXRnpzpY+eWyLN4ns9Og+Vjd0qQ9+I/KrBQdBru7or
        72hW2vvRSFLiU6+GYesVaNkc6qrkTjQF5zBu7XTF+RTSN4mtbNdmDdvSlNw9keaA34T6YXKvGuz8aeEY
        VEbPBArG2t8FhgVt0ZVkH6TZcqP8dlKGFp+Z+n5Q+t1jUFDXS9FFKJe8OcbkXTXY4TpL2Orefh8r2mpo
        p251NHeiyujUYfMlpLbsYM0bGbRBt1unoP9FdZiMmYDsqB6Gq6IH3rWtaKeg3Zr+qfvzfkbF9svUibC9
        NaNV0C5dWQ9GdRa4P8SKjyfs4JlhP0vRAL1kCpguwX5osOIhSA+xw0Angp49WnkixKCtenjX2KmqHGtF
        xwt2rGz+8RSfQ61ZV26QaL/Qx7STs0Rr0+nrcGdOhBi0Xx82qyatHq8HcHZot7Bfpbzbiow17KcG45Wl
        rZyJ7sc1enVn28xYwP5si6o+Y84qg3trYEfWQZoYX0ZpKslxgv1dFun7xyPa+QQa1aqBg69CYz1Djv2r
        so6fRiPU+iDbStiJsqEMYqJOiKVh37WYvcYCLY1eSep2c1WzTQTsb5UT41KzdxN2oMq3iIk9IZaG47Aq
        0hTZgax+1FXYf72dKqObL2FouD7/l+EnhNMDcVH2DKo8VuuavRvQ4Gegr6r1GXwZWicJ8VGWQO4ss3YD
        GqxXbTmuN6vjJCFOcuOntJzANmZtNzR0JfTfanUCzWF4vtkHBtvUSE4Ns9AQaz2wSfprI+n//VatY9Bn
        Gon7KEpxmVnbDQ0tGw59oFlnDdvaHr0PKYlxldGk11hRpyPQZ2VLGu9u1nZCAzWkITeupa812mbCdjTO
        XwvA98NbbDNOB6C/NIcjNwL5arO2ExpYtprnrBL5Ul6TWhYXW+qfblxynSXQZ5qzn0LZVDY0a/ugcZpN
        luI2s/UF5TWXou6EpBh+C9Ux6LNnotzbzBPN2i5o2K6hfUn+1qy1oJxS3dRZYLGMBbZpp0PQb8r9leIe
        s7ULGjZzqMLS3G22WlBOQ4w1InRQ+AT5jkLfPRc9WfRinHb9saNBqyMNXktxvFkrQ5m1kXKZ1kEZ6TT6
        VHO4l34lq6wZYzW6dBKhDzWlNsVHzNYOaJDSwqTQR5ZaWeHw/xmqmv1OJ4ISIGvCvKdmHGPoXyVyTqHv
        X88y6+ihMbmRsLXWasOvj3BVM2XoauDZricE+lrPl0osl2Jvs44WGrIcyjV0f7NWAv+1oVgW3aqNfEK+
        0zz0e24aazsWxqchu4T2RNFsscqXNLx/XZTKc5fZnQmE/lcG8xT3mW200JBFoT1RzjdbJfArt1OOh8zq
        TCjEwOYhFJKMPqs5jch9VKmc0hJv7mFdKMPHwAcSOt2DONCKSimONNtooAF6bZqj0oLl+PS2qWwdik4k
        RHOGD7GgrIMpLjbbaKABC0M7otxhtlLwlk0oOcOsjqN4USKHFF8022igAWeEdkQ51Wyl4FVCrxSam9Ga
        /LHO6CEe/ryIjDgPm2000ACt1JOiUoJcfJoTkeNNZnWcJRAXuclHK5mteag8t4hIpfQs+HK3TjeazXGm
        QWzk3lSOZpoqFc8L9Uf5idlKwfvdUCTKQWZznGkQG1rDO8VrzdYsVLxXqD/KrWbLgu+FwZ7EnyWcKMRG
        bij5aEZDq+JQf5TzzJYF3+nBHsUnAzlJiA8ljksxmteyqjjUH+VQs2XBl1vp07NvOEmIj01DmERZsoBm
        o6jiUH+Uqm+ectNXNzOb4/RAfGgOT4ppSy03hioO9UfZ1GxZ8GlRxxSrmM1xeiA+nh7CJEp0Uf6ho4pD
        /VFK06Xj0RK0KZ4wm+MkIU6SyxiYpTmoU1kAczzdrEnwKAV9igfM5jhJiJPkeDmzNAd1bhKqjvKI2bLg
        2zrYo9xpNsdJQpzcHsKlF7M0B3XOD1VH+bbZsuDTyNgUnnXDKYU4Sb7sMUtzUKeSBKS43Wyl4I2lxRnN
        mwOncxAryeweZmkO6tw3VB2l1jti/PqA9wOked432I8dpxTiJZlP2CzNQZ1vCFVHuc5sjjNUiLULQ8j1
        YpbmoE4lF0txhdkcZ6gQa1pCOYpZmoM6jwpVR7nQbI4zVIi15Ng5szQHdWr95xRnm81xhgqxdmoIuV7M
        0hzUeWKoOsrpZnOcoUKsvSeEXC9maQ7qPCRUHeU0sznOUCHWzgsh14tZmoM6c1k8LjCb4wwVYu3DIeR6
        MUtzUGdugZZPmM1xhgqx9vEQcr2YpTmoc9tQdZRKU1EdZ7YQa9eHkOvFLM1BnX8Rqo7yDbM5zlAh1m4J
        IdeLWZqDOrWMa4ofmc1xhgqxdm8IuV7M0ixWd4wnzeI4Q4VY+10IuR4qTV8YOFT8w1B/lLlmc5yhQIyt
        E0ItypfN1iyqONQfZb7ZHGcoEGM7h1CLcpXZmoWKF4f6oxxsNscZCsTYoSHUoozmAzIVJ78mwllmc5yh
        QIx9IIRalAPM1ixUnBv/9EmzOc5QIMZyK+i+xGzNQsUHhPqjVJqn7Tj9Qow9GEItylpmaxYqzg31GM17
        YmciILzmhCiL8pjZmofK1whtSLKVWR1noBBbLw4hFmW0w4xowPdDO6L4CkTOUCC2civpvtdso4EGJFOM
        QDtWv3fGDmIrlhppiv3NNhpoQG5aauX8T45TB2LrzhBiUUa7uDwNyH1V/LXZHGegEFuPhxDrYXQP2VPQ
        iGeHtiTZ0KyOMxCIqVwO4nbM5aEh94f2RHmj2RxnIBBTx4fQijLah+wpaMhFoT1RLjWb4wwEYiq3gta+
        ZhstNORVoT1RfJ0JZ2AQT09DucWC1jbraKEhq4T2JKm01JfjlEEs7RZCKsr9ZmsHNOjW0K4oPozcGQjE
        0jtDSEW53GztgAadFNoVxRMuOwOBWMo9TxxutnZAg3ILfT9oNsfpG+JovRBOSbY2azugQcui3JxtXyje
        mRXE0BEhlKK08w8vDbsstC/KNWZznL4ghnKTitr1PDEFDdsvtC/JJmZ1nFoQO2W3TgvN2i5omBaL/17R
        xDi+4qnTF8RO7tbpYbSiWdsHjTunaGYcX/XU6QtiJ3frdLHZ2gkNzE5RBX/gdmpBzGwWQifJK83aXmjk
        10Nbo3iafqcWxMyiEDpRHkDPNGt7oZHvKpqbpl3vk53WQqysgBT4Kc41a7uhoduE9iZpx/Bep/UQKweF
        kEnycrO2Hxr7idDmKPrIt7JZHScJcfKFImLidGtxIBqcG04uDjOr40QhRnYJoZKke9liaHQuK7knNXCy
        ECPJRR7hPtT+B+yZ0OijiuanWWBWx5kGsZGbhy1OMGu3oOGroR8XuxDnBrM6zjSIjVxep5+jeWbtHjT+
        rGI30vjVwpkGMVF2lTjbrN2EHXgB+n2xK3H8auFMg5jIXSX+iLr/nYudeH+xO2n8auEUEAtlV4lufKwr
        gx3Rmts/K3Ypjl8tnAJiIXeV+A0anyQY7ExuwrnY26zOhEIM5NLri/eZdTxgh5QG57vFrsX5CmrvmHhn
        6ND/ueHheuO0nlnHB3aq7LvFmWZ1Jgz6PjeJSCwy63jBjim5ga4IOXYzuzMh0OeaaqrZcyn0u7lmHz/Y
        udcUu5nmdrSs2Z0JgP7ODecQx5l1fGEnPxr2NckpZnXGHPq6LNnFZIyRY0c3RrlXtGJPsztjCn28FsrN
        0hR7mX38YWePDfucRGskj9/bBmcJ9O81RU+nucSskwM7nUvKLP7drM6YQd+WTVn+KZq8VbDY6Vxa9Sk+
        ZnZnTKBPXx+6Nsv4P1ynYOfPDMcgyxFmdzoOfan5+7oK5LjJ7JMLB+GGcCyy+PNFx6EPV0R65Z5Dz5Ib
        W5HJhYOgg/UdHZES/PtFh6H/LgndmOXVZnc4GNuFY5LlV2gFK+J0CPqt7G2jeIfZnSk4KH8Tjk0WffJf
        1Yo4HYD+KkulKq40uzMTDs7p4Rhl0a1Wd+foThD00+pFj+X5KlrDijgxOECLi0OVRwdyfSvitBD6p8oJ
        8QTayYo4OThQZR/2xL3opVbEaRH0S5VbJuFJ8erAAatyYmgi+0lWxGkB9EfZIL8pfBGffuDAVTkxxGfR
        9lbMGRH0wduK3ijHT4jZwAGsemL8Gh1rxZwG4bivhC5WJ1TAh+4MAg5k1RNDXI+2saLOkOFYawzbnTrw
        FehWpvC2owMajmtlNJlpRyveCmjPcmhzpKzsx6GLkPbrISQeQxrq8DWkn8uzgxVvFbRrC3QpqspiK+oM
        Eg7s28PxrcV16BW2iUah3jloH6SEcHqN3C86aS5HC9FIs55Q/zz0bqQ8TFUZjyRmbYUDvAA9XhzqetyC
        XmubGQpsX8sm63biNHQb0tuxQaOv+rp/fyVqLB09dW2FdHI/gqryB3SMbcIZJhxopVe8WUe9D76EDkNr
        2uZmBdvZCB2MrkZl02wHjdaDOxcNbZkrtq1vDlegumh9Ev8w1zQc9MOR7sH7QQm29Bd3D1Rp2Ih8aE90
        Avo4yi2m3zR3IeXWmvXJrm0g5WLS1a4fLkBzbHNO03DwFaha1F6X6tmgtTT0cJuSTqIuoKvVeaj2pH/K
        7I708P8L1A9KRLC/bc4ZNXSG3uronvdR5AQ0y00JAvSVWVlUlrfDVcC/59rvtI5Ibjm2MvQHSetdr2Sb
        dtoEHfM8pAddrcLaRjRm60qkIDoQzUfPtbavijZBO6IT0Y3ol2iQ6EpyD8rl9q2DBnC28rWxMwM6SqM0
        j0f3o1Git0XXIj2M1x7yThklpz4A/SsaxtusfvkImm/NdLoEHbc80kOj/jo2gV4XK4P2yehl1oyBwPbW
        R0ejfh+AZ4uuMrrV2sKa5HQdOlP3z2VJuPrhc0hvpHTbs5xVN1SoR1N4z0D/g4bNHegYNL6JjicdOvfZ
        6BB0PvoM+hb6LSpDfyk/j/TXUtNnR/4Xkzbog+HrkG6vBsmPkL6B+C3SJEMAaLTnukgLWOqv/tJq/V9J
        2qg3cKeg/0L98CTSw/2bkX9ncMYLgnpL9Eak19T6zhL7yKkBiBp8qI9te6NVrLjjTAYEvRbO2QBtjzwr
        iuM4juM4juM4juM4juM4juM4juM4juM4juM4juM4juNMAMss8/8/PAF11XASRwAAAABJRU5ErkJggg==
</value>
  </data>
</root>