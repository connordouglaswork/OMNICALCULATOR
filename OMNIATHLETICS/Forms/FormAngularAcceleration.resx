<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>